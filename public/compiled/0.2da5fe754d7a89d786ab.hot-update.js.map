{"version":3,"sources":["webpack:///./public/src/actions/Auth.js"],"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","requestLogin","type","isFetching","isAuthenticated","credentials","receiveLogin","user","loginError","message","requestLogout","receiveLogout","exports","loginUser","creds","history","axiosBod","window","btoa","JSON","stringify","params","email","password","console","log","dispatch","get","then","response","data","Promise","reject","localStorage","setItem","name","userAttributes","Object","values","filter","element","i","userObject","reduce","acc","curr","push","catch","err","signupUser","body","fname","lname","callbackContactNumber","callbackNum","post","statusText","logoutUser","removeItem"],"mappings":"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","file":"0.2da5fe754d7a89d786ab.hot-update.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\r\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\r\n\r\n\r\nconst requestLogin = credentials => ({\r\n  type: 'LOGIN_REQUEST',\r\n  isFetching: true,\r\n  isAuthenticated: false,\r\n  credentials\r\n});\r\n\r\n\r\nconst receiveLogin = user => ({\r\n  type: 'LOGIN_SUCCESS',\r\n  isFetching: false,\r\n  isAuthenticated: true,\r\n  user\r\n});\r\n\r\n\r\nconst loginError = message => ({\r\n  type: 'LOGIN_FAILURE',\r\n  isFetching: false,\r\n  isAuthenticated: false,\r\n  message,\r\n});\r\n\r\n\r\nconst requestLogout = () => ({\r\n  type: 'LOGOUT_REQUEST',\r\n  isFetching: true,\r\n  isAuthenticated: true,\r\n});\r\n\r\n\r\nconst receiveLogout = () => ({\r\n  type: 'LOGOUT_SUCCESS',\r\n  isFetching: false,\r\n  isAuthenticated: false,\r\n});\r\n\r\n\r\nexports.loginUser = (creds, history) => {\r\n  let axiosBod = window.btoa(JSON.stringify({\r\n    params: {\r\n      email: creds.email,\r\n      password: creds.password\r\n    }\r\n  }));\r\n  console.log(\"AXIOS BOD IS: \", axiosBod);\r\n\r\n  return (dispatch) => {\r\n    dispatch(requestLogin(creds));\r\n    return axios.get(`api/login/${axiosBod}`)\r\n      .then(response => {\r\n        if(response.data.message){\r\n          dispatch(loginError('Bad Request...'));\r\n          return Promise.reject(response);\r\n        }\r\n        console.log(\"RESP FROM NODE IS: \", response.data);\r\n        // localStorage.setItem('user_token', response.data.user_token);\r\n        localStorage.setItem('email', response.data.email);\r\n        localStorage.setItem('name', response.data.name);\r\n        let userAttributes = Object.values(response.data).filter((element, i) => element !== null);\r\n        let userObject = userAttributes.reduce((acc, curr, i) => {\r\n          acc[i] = curr;\r\n          return acc;\r\n        }, {});\r\n        console.log(\"USER OBJECT IS: woot owot: \", userObject);\r\n        dispatch(receiveLogin(userObject));\r\n        history.push('/');\r\n      })\r\n      .catch(err => {\r\n        console.log('Error: ', err);\r\n      });\r\n  };\r\n};\r\n\r\n\r\nexports.signupUser = (creds, history) => {\r\n  const body = {\r\n    email: creds.email,\r\n    name: creds.fname + ' ' + creds.lname,\r\n    password: creds.password,\r\n    callbackContactNumber: creds.callbackNum\r\n  };\r\n  console.log('creds info', creds);\r\n  return (dispatch) => {\r\n    dispatch(requestLogin(creds));\r\n    return axios.post('api/register', body)\r\n      .then(response => {\r\n        if (response.statusText !== 'Created') {\r\n          dispatch(loginError('Bad Request...'));\r\n          return Promise.reject(response);\r\n        }\r\n\r\n        console.log(\"OBJECT RETURNED FROM NODE IS: \", response.data)\r\n        // localStorage.setItem('user_token', response.data.user_token);\r\n        localStorage.setItem('email', response.data.email);\r\n        localStorage.setItem('name', response.data.name);\r\n        dispatch(receiveLogin(response.data));\r\n        history.push('/');\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n};\r\n\r\n\r\nexports.logoutUser = (history) => (dispatch) => {\r\n  dispatch(requestLogout());\r\n  // localStorage.removeItem('user_token');\r\n  localStorage.removeItem('email');\r\n  localStorage.removeItem('name');\r\n  dispatch(receiveLogout());\r\n  history.push('/');\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/actions/Auth.js"],"sourceRoot":""}