{"version":3,"sources":["webpack:///./public/src/containers/Router.jsx"],"names":["Router","props","state","errorMessage","console","log","dispatch","isAuthenticated","history","user","mapStateToProps","auth"],"mappings":";;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;;;;AADA;;;AAEA;AACA;AACA;AACA;;;IAGMA,M;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA,gHACXA,KADW;;AAEjB,UAAKC,KAAL,GAAa;AACXC,oBAAc;AADH,KAAb;AAFiB;AAKlB;;;;6BAGQ;AACPC,cAAQC,GAAR,CAAY,aAAZ,EAA2B,KAAKJ,KAAhC;AADO,mBAE4D,KAAKA,KAFjE;AAAA,UAECK,QAFD,UAECA,QAFD;AAAA,UAEWH,YAFX,UAEWA,YAFX;AAAA,UAEyBI,eAFzB,UAEyBA,eAFzB;AAAA,UAE0CC,OAF1C,UAE0CA,OAF1C;AAAA,UAEmDC,IAFnD,UAEmDA,IAFnD;;AAGP,aAAOF,oBAAoB,KAApB,GACL;AAAA;AAAA;AACE;AAAA;AAAA,YAAO,WAAP,EAAa,MAAK,GAAlB;AACE;AAAA;AAAA;AACE;AACE,wBAAUD,QADZ;AAEE,4BAAcH,YAFhB;AAGE,+BAAiBI,eAHnB;AAIE,uBAASC;AAJX;AADF;AADF,SADF;AAWE;AAAA;AAAA,YAAO,WAAP,EAAa,MAAK,QAAlB;AACE;AACE,sBAAUF,QADZ;AAEE,0BAAcH,YAFhB;AAGE,6BAAiBI,eAHnB;AAIE,qBAASC;AAJX;AADF,SAXF;AAmBE;AAAA;AAAA,YAAO,WAAP,EAAa,MAAK,WAAlB;AACE;AACE,sBAAUF,QADZ;AAEE,0BAAcH,YAFhB;AAGE,6BAAiBI,eAHnB;AAIE,qBAASC;AAJX;AADF;AAnBF,OADK,GA8BL;AAAA;AAAA;AACE;AAAA;AAAA,YAAO,WAAP,EAAa,MAAK,GAAlB;AACE;AAAA;AAAA;AACE;AACE,wBAAUF,QADZ;AAEE,4BAAcH,YAFhB;AAGE,+BAAiBI,eAHnB;AAIE,uBAASC,OAJX;AAKE,oBAAMC;AALR,cADF;AAcE;AACE,wBAAUH,QADZ;AAEE,4BAAcH,YAFhB;AAGE,+BAAiBI,eAHnB;AAIE,uBAASC,OAJX;AAKE,oBAAMC;AALR;AAdF;AADF;AADF,OA9BF;AAyDD;;;;;;AACF;;AAGD,IAAMC,kBAAkB,SAAlBA,eAAkB,CAACR,KAAD,EAAW;AAAA,MACzBS,IADyB,GAChBT,KADgB,CACzBS,IADyB;AAAA,MAEzBJ,eAFyB,GAEeI,IAFf,CAEzBJ,eAFyB;AAAA,MAERJ,YAFQ,GAEeQ,IAFf,CAERR,YAFQ;AAAA,MAEMM,IAFN,GAEeE,IAFf,CAEMF,IAFN;;AAGjC,SAAO;AACLF,oCADK;AAELJ,8BAFK;AAGLM;AAHK,GAAP;AAKD,CARD;;kBAUe,gCAAW,yBAAQC,eAAR,EAAyBV,MAAzB,CAAX,C","file":"0.b45a32e96ffee98f882e.hot-update.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Switch, withRouter } from 'react-router-dom';\r\nimport GuestNavBar from '../components/GuestNavBar';\r\nimport UserNavBar from '../components/UserNavBar';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport SecureProperties from './SecureProperties';\r\n// import Profile from './Profile';\r\nimport { logoutUser } from '../actions/Auth';\r\n// import Signup from './Logging/Signup';\r\n// import FrontPageUser from './FrontPage/FrontPageUser';\r\n// import FrontPageGuest from './FrontPage/FrontPageGuest';\r\n// import Login from './Logging/Login';\r\n\r\n\r\nclass Router extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMessage: '',\r\n    };\r\n  }\r\n\r\n\r\n  render() {\r\n    console.log(\"props are: \", this.props);\r\n    const { dispatch, errorMessage, isAuthenticated, history, user } = this.props;\r\n    return isAuthenticated === false ? (\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <div>\r\n            <GuestNavBar\r\n              dispatch={dispatch}\r\n              errorMessage={errorMessage}\r\n              isAuthenticated={isAuthenticated}\r\n              history={history}\r\n            />\r\n          </div>\r\n        </Route>\r\n        <Route exact path=\"/login\">\r\n          <Login\r\n            dispatch={dispatch}\r\n            errorMessage={errorMessage}\r\n            isAuthenticated={isAuthenticated}\r\n            history={history}\r\n          />\r\n        </Route>\r\n        <Route exact path=\"/register\">\r\n          <Register\r\n            dispatch={dispatch}\r\n            errorMessage={errorMessage}\r\n            isAuthenticated={isAuthenticated}\r\n            history={history}\r\n          />          \r\n        </Route>\r\n      </Switch>\r\n    ) : (\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <div>\r\n            <UserNavBar \r\n              dispatch={dispatch}\r\n              errorMessage={errorMessage}\r\n              isAuthenticated={isAuthenticated}\r\n              history={history}\r\n              user={user}\r\n            />\r\n            {/* <Profile \r\n              dispatch={dispatch}\r\n              errorMessage={errorMessage}\r\n              isAuthenticated={isAuthenticated}\r\n              history={history}\r\n            /> */}\r\n            <SecureProperties \r\n              dispatch={dispatch}\r\n              errorMessage={errorMessage}\r\n              isAuthenticated={isAuthenticated}\r\n              history={history}\r\n              user={user}\r\n            />\r\n          </div>\r\n        </Route>\r\n      </Switch>\r\n    )\r\n  }\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { auth } = state;\r\n  const { isAuthenticated, errorMessage, user } = auth;\r\n  return {\r\n    isAuthenticated,\r\n    errorMessage,\r\n    user\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Router));\r\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/containers/Router.jsx"],"sourceRoot":""}